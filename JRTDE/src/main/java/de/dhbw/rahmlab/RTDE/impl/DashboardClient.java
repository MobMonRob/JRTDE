/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.RTDE.impl;

public class DashboardClient {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected DashboardClient(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DashboardClient obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RTDE_MODULEJNI.delete_DashboardClient(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public DashboardClient(String hostname, int port, boolean verbose) {
    this(RTDE_MODULEJNI.new_DashboardClient__SWIG_0(hostname, port, verbose), true);
  }

  public DashboardClient(String hostname, int port) {
    this(RTDE_MODULEJNI.new_DashboardClient__SWIG_1(hostname, port), true);
  }

  public DashboardClient(String hostname) {
    this(RTDE_MODULEJNI.new_DashboardClient__SWIG_2(hostname), true);
  }

  public void connect() {
    RTDE_MODULEJNI.DashboardClient_connect(swigCPtr, this);
  }

  public boolean isConnected() {
    return RTDE_MODULEJNI.DashboardClient_isConnected(swigCPtr, this);
  }

  public void disconnect() {
    RTDE_MODULEJNI.DashboardClient_disconnect(swigCPtr, this);
  }

  public void send(String str) {
    RTDE_MODULEJNI.DashboardClient_send(swigCPtr, this, str);
  }

  public String receive() {
    return RTDE_MODULEJNI.DashboardClient_receive(swigCPtr, this);
  }

  public void loadURP(String urp_name) {
    RTDE_MODULEJNI.DashboardClient_loadURP(swigCPtr, this, urp_name);
  }

  public void play() {
    RTDE_MODULEJNI.DashboardClient_play(swigCPtr, this);
  }

  public void stop() {
    RTDE_MODULEJNI.DashboardClient_stop(swigCPtr, this);
  }

  public void pause() {
    RTDE_MODULEJNI.DashboardClient_pause(swigCPtr, this);
  }

  public void quit() {
    RTDE_MODULEJNI.DashboardClient_quit(swigCPtr, this);
  }

  public void shutdown() {
    RTDE_MODULEJNI.DashboardClient_shutdown(swigCPtr, this);
  }

  public boolean running() {
    return RTDE_MODULEJNI.DashboardClient_running(swigCPtr, this);
  }

  public void popup(String message) {
    RTDE_MODULEJNI.DashboardClient_popup(swigCPtr, this, message);
  }

  public void closePopup() {
    RTDE_MODULEJNI.DashboardClient_closePopup(swigCPtr, this);
  }

  public void closeSafetyPopup() {
    RTDE_MODULEJNI.DashboardClient_closeSafetyPopup(swigCPtr, this);
  }

  public void powerOn() {
    RTDE_MODULEJNI.DashboardClient_powerOn(swigCPtr, this);
  }

  public void powerOff() {
    RTDE_MODULEJNI.DashboardClient_powerOff(swigCPtr, this);
  }

  public void brakeRelease() {
    RTDE_MODULEJNI.DashboardClient_brakeRelease(swigCPtr, this);
  }

  public void unlockProtectiveStop() {
    RTDE_MODULEJNI.DashboardClient_unlockProtectiveStop(swigCPtr, this);
  }

  public void restartSafety() {
    RTDE_MODULEJNI.DashboardClient_restartSafety(swigCPtr, this);
  }

  public String polyscopeVersion() {
    return RTDE_MODULEJNI.DashboardClient_polyscopeVersion(swigCPtr, this);
  }

  public String programState() {
    return RTDE_MODULEJNI.DashboardClient_programState(swigCPtr, this);
  }

  public String robotmode() {
    return RTDE_MODULEJNI.DashboardClient_robotmode(swigCPtr, this);
  }

  public String getLoadedProgram() {
    return RTDE_MODULEJNI.DashboardClient_getLoadedProgram(swigCPtr, this);
  }

  public String safetymode() {
    return RTDE_MODULEJNI.DashboardClient_safetymode(swigCPtr, this);
  }

  public String safetystatus() {
    return RTDE_MODULEJNI.DashboardClient_safetystatus(swigCPtr, this);
  }

  public void addToLog(String message) {
    RTDE_MODULEJNI.DashboardClient_addToLog(swigCPtr, this, message);
  }

  public boolean isProgramSaved() {
    return RTDE_MODULEJNI.DashboardClient_isProgramSaved(swigCPtr, this);
  }

  public boolean isInRemoteControl() {
    return RTDE_MODULEJNI.DashboardClient_isInRemoteControl(swigCPtr, this);
  }

  public void setUserRole(UserRole role) {
    RTDE_MODULEJNI.DashboardClient_setUserRole(swigCPtr, this, role.swigValue());
  }

  public final static class ConnectionState {
    public final static DashboardClient.ConnectionState DISCONNECTED = new DashboardClient.ConnectionState("DISCONNECTED", RTDE_MODULEJNI.DashboardClient_ConnectionState_DISCONNECTED_get());
    public final static DashboardClient.ConnectionState CONNECTED = new DashboardClient.ConnectionState("CONNECTED", RTDE_MODULEJNI.DashboardClient_ConnectionState_CONNECTED_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ConnectionState swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ConnectionState.class + " with value " + swigValue);
    }

    private ConnectionState(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ConnectionState(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ConnectionState(String swigName, ConnectionState swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ConnectionState[] swigValues = { DISCONNECTED, CONNECTED };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
