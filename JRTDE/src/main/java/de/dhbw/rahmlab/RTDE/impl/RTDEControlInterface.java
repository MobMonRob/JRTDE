/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.rahmlab.RTDE.impl;

public class RTDEControlInterface {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected RTDEControlInterface(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RTDEControlInterface obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RTDE_MODULEJNI.delete_RTDEControlInterface(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public RTDEControlInterface(String hostname, int port, boolean verbose) {
    this(RTDE_MODULEJNI.new_RTDEControlInterface__SWIG_0(hostname, port, verbose), true);
  }

  public RTDEControlInterface(String hostname, int port) {
    this(RTDE_MODULEJNI.new_RTDEControlInterface__SWIG_1(hostname, port), true);
  }

  public RTDEControlInterface(String hostname) {
    this(RTDE_MODULEJNI.new_RTDEControlInterface__SWIG_2(hostname), true);
  }

  public void disconnect() {
    RTDE_MODULEJNI.RTDEControlInterface_disconnect(swigCPtr, this);
  }

  public boolean reconnect() {
    return RTDE_MODULEJNI.RTDEControlInterface_reconnect(swigCPtr, this);
  }

  public boolean isConnected() {
    return RTDE_MODULEJNI.RTDEControlInterface_isConnected(swigCPtr, this);
  }

  public boolean reuploadScript() {
    return RTDE_MODULEJNI.RTDEControlInterface_reuploadScript(swigCPtr, this);
  }

  public boolean sendCustomScriptFunction(String function_name, String script) {
    return RTDE_MODULEJNI.RTDEControlInterface_sendCustomScriptFunction(swigCPtr, this, function_name, script);
  }

  public boolean sendCustomScriptFile(String file_path) {
    return RTDE_MODULEJNI.RTDEControlInterface_sendCustomScriptFile(swigCPtr, this, file_path);
  }

  public void stopScript() {
    RTDE_MODULEJNI.RTDEControlInterface_stopScript(swigCPtr, this);
  }

  public void stopL(double a) {
    RTDE_MODULEJNI.RTDEControlInterface_stopL__SWIG_0(swigCPtr, this, a);
  }

  public void stopL() {
    RTDE_MODULEJNI.RTDEControlInterface_stopL__SWIG_1(swigCPtr, this);
  }

  public void stopJ(double a) {
    RTDE_MODULEJNI.RTDEControlInterface_stopJ__SWIG_0(swigCPtr, this, a);
  }

  public void stopJ() {
    RTDE_MODULEJNI.RTDEControlInterface_stopJ__SWIG_1(swigCPtr, this);
  }

  public boolean moveJ(VectorDouble q, double speed, double acceleration) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveJ__SWIG_0(swigCPtr, this, VectorDouble.getCPtr(q), q, speed, acceleration);
  }

  public boolean moveJ(VectorDouble q, double speed) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveJ__SWIG_1(swigCPtr, this, VectorDouble.getCPtr(q), q, speed);
  }

  public boolean moveJ(VectorDouble q) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveJ__SWIG_2(swigCPtr, this, VectorDouble.getCPtr(q), q);
  }

  public boolean moveJ(VectorVectorDouble path) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveJ__SWIG_3(swigCPtr, this, VectorVectorDouble.getCPtr(path), path);
  }

  public boolean moveJ_IK(VectorDouble pose, double speed, double acceleration) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveJ_IK__SWIG_0(swigCPtr, this, VectorDouble.getCPtr(pose), pose, speed, acceleration);
  }

  public boolean moveJ_IK(VectorDouble pose, double speed) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveJ_IK__SWIG_1(swigCPtr, this, VectorDouble.getCPtr(pose), pose, speed);
  }

  public boolean moveJ_IK(VectorDouble pose) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveJ_IK__SWIG_2(swigCPtr, this, VectorDouble.getCPtr(pose), pose);
  }

  public boolean moveL(VectorDouble pose, double speed, double acceleration) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveL__SWIG_0(swigCPtr, this, VectorDouble.getCPtr(pose), pose, speed, acceleration);
  }

  public boolean moveL(VectorDouble pose, double speed) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveL__SWIG_1(swigCPtr, this, VectorDouble.getCPtr(pose), pose, speed);
  }

  public boolean moveL(VectorDouble pose) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveL__SWIG_2(swigCPtr, this, VectorDouble.getCPtr(pose), pose);
  }

  public boolean moveL(VectorVectorDouble path) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveL__SWIG_3(swigCPtr, this, VectorVectorDouble.getCPtr(path), path);
  }

  public boolean moveL_FK(VectorDouble q, double speed, double acceleration) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveL_FK__SWIG_0(swigCPtr, this, VectorDouble.getCPtr(q), q, speed, acceleration);
  }

  public boolean moveL_FK(VectorDouble q, double speed) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveL_FK__SWIG_1(swigCPtr, this, VectorDouble.getCPtr(q), q, speed);
  }

  public boolean moveL_FK(VectorDouble q) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveL_FK__SWIG_2(swigCPtr, this, VectorDouble.getCPtr(q), q);
  }

  public boolean moveC(VectorDouble pose_via, VectorDouble pose_to, double speed, double acceleration, double blend, int mode) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveC__SWIG_0(swigCPtr, this, VectorDouble.getCPtr(pose_via), pose_via, VectorDouble.getCPtr(pose_to), pose_to, speed, acceleration, blend, mode);
  }

  public boolean moveC(VectorDouble pose_via, VectorDouble pose_to, double speed, double acceleration, double blend) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveC__SWIG_1(swigCPtr, this, VectorDouble.getCPtr(pose_via), pose_via, VectorDouble.getCPtr(pose_to), pose_to, speed, acceleration, blend);
  }

  public boolean moveC(VectorDouble pose_via, VectorDouble pose_to, double speed, double acceleration) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveC__SWIG_2(swigCPtr, this, VectorDouble.getCPtr(pose_via), pose_via, VectorDouble.getCPtr(pose_to), pose_to, speed, acceleration);
  }

  public boolean moveC(VectorDouble pose_via, VectorDouble pose_to, double speed) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveC__SWIG_3(swigCPtr, this, VectorDouble.getCPtr(pose_via), pose_via, VectorDouble.getCPtr(pose_to), pose_to, speed);
  }

  public boolean moveC(VectorDouble pose_via, VectorDouble pose_to) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveC__SWIG_4(swigCPtr, this, VectorDouble.getCPtr(pose_via), pose_via, VectorDouble.getCPtr(pose_to), pose_to);
  }

  public boolean moveP(VectorDouble pose, double speed, double acceleration, double blend) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveP__SWIG_0(swigCPtr, this, VectorDouble.getCPtr(pose), pose, speed, acceleration, blend);
  }

  public boolean moveP(VectorDouble pose, double speed, double acceleration) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveP__SWIG_1(swigCPtr, this, VectorDouble.getCPtr(pose), pose, speed, acceleration);
  }

  public boolean moveP(VectorDouble pose, double speed) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveP__SWIG_2(swigCPtr, this, VectorDouble.getCPtr(pose), pose, speed);
  }

  public boolean moveP(VectorDouble pose) {
    return RTDE_MODULEJNI.RTDEControlInterface_moveP__SWIG_3(swigCPtr, this, VectorDouble.getCPtr(pose), pose);
  }

  public boolean speedJ(VectorDouble qd, double acceleration, double time) {
    return RTDE_MODULEJNI.RTDEControlInterface_speedJ__SWIG_0(swigCPtr, this, VectorDouble.getCPtr(qd), qd, acceleration, time);
  }

  public boolean speedJ(VectorDouble qd, double acceleration) {
    return RTDE_MODULEJNI.RTDEControlInterface_speedJ__SWIG_1(swigCPtr, this, VectorDouble.getCPtr(qd), qd, acceleration);
  }

  public boolean speedJ(VectorDouble qd) {
    return RTDE_MODULEJNI.RTDEControlInterface_speedJ__SWIG_2(swigCPtr, this, VectorDouble.getCPtr(qd), qd);
  }

  public boolean speedL(VectorDouble xd, double acceleration, double time) {
    return RTDE_MODULEJNI.RTDEControlInterface_speedL__SWIG_0(swigCPtr, this, VectorDouble.getCPtr(xd), xd, acceleration, time);
  }

  public boolean speedL(VectorDouble xd, double acceleration) {
    return RTDE_MODULEJNI.RTDEControlInterface_speedL__SWIG_1(swigCPtr, this, VectorDouble.getCPtr(xd), xd, acceleration);
  }

  public boolean speedL(VectorDouble xd) {
    return RTDE_MODULEJNI.RTDEControlInterface_speedL__SWIG_2(swigCPtr, this, VectorDouble.getCPtr(xd), xd);
  }

  public boolean servoJ(VectorDouble q, double speed, double acceleration, double time, double lookahead_time, double gain) {
    return RTDE_MODULEJNI.RTDEControlInterface_servoJ(swigCPtr, this, VectorDouble.getCPtr(q), q, speed, acceleration, time, lookahead_time, gain);
  }

  public boolean servoL(VectorDouble pose, double speed, double acceleration, double time, double lookahead_time, double gain) {
    return RTDE_MODULEJNI.RTDEControlInterface_servoL(swigCPtr, this, VectorDouble.getCPtr(pose), pose, speed, acceleration, time, lookahead_time, gain);
  }

  public boolean servoStop() {
    return RTDE_MODULEJNI.RTDEControlInterface_servoStop(swigCPtr, this);
  }

  public boolean speedStop() {
    return RTDE_MODULEJNI.RTDEControlInterface_speedStop(swigCPtr, this);
  }

  public boolean servoC(VectorDouble pose, double speed, double acceleration, double blend) {
    return RTDE_MODULEJNI.RTDEControlInterface_servoC__SWIG_0(swigCPtr, this, VectorDouble.getCPtr(pose), pose, speed, acceleration, blend);
  }

  public boolean servoC(VectorDouble pose, double speed, double acceleration) {
    return RTDE_MODULEJNI.RTDEControlInterface_servoC__SWIG_1(swigCPtr, this, VectorDouble.getCPtr(pose), pose, speed, acceleration);
  }

  public boolean servoC(VectorDouble pose, double speed) {
    return RTDE_MODULEJNI.RTDEControlInterface_servoC__SWIG_2(swigCPtr, this, VectorDouble.getCPtr(pose), pose, speed);
  }

  public boolean servoC(VectorDouble pose) {
    return RTDE_MODULEJNI.RTDEControlInterface_servoC__SWIG_3(swigCPtr, this, VectorDouble.getCPtr(pose), pose);
  }

  public boolean forceMode(VectorDouble task_frame, VectorInt selection_vector, VectorDouble wrench, int type, VectorDouble limits) {
    return RTDE_MODULEJNI.RTDEControlInterface_forceMode(swigCPtr, this, VectorDouble.getCPtr(task_frame), task_frame, VectorInt.getCPtr(selection_vector), selection_vector, VectorDouble.getCPtr(wrench), wrench, type, VectorDouble.getCPtr(limits), limits);
  }

  public boolean forceModeStop() {
    return RTDE_MODULEJNI.RTDEControlInterface_forceModeStop(swigCPtr, this);
  }

  public boolean zeroFtSensor() {
    return RTDE_MODULEJNI.RTDEControlInterface_zeroFtSensor(swigCPtr, this);
  }

  public boolean setPayload(double mass, VectorDouble cog) {
    return RTDE_MODULEJNI.RTDEControlInterface_setPayload__SWIG_0(swigCPtr, this, mass, VectorDouble.getCPtr(cog), cog);
  }

  public boolean setPayload(double mass) {
    return RTDE_MODULEJNI.RTDEControlInterface_setPayload__SWIG_1(swigCPtr, this, mass);
  }

  public boolean teachMode() {
    return RTDE_MODULEJNI.RTDEControlInterface_teachMode(swigCPtr, this);
  }

  public boolean endTeachMode() {
    return RTDE_MODULEJNI.RTDEControlInterface_endTeachMode(swigCPtr, this);
  }

  public boolean forceModeSetDamping(double damping) {
    return RTDE_MODULEJNI.RTDEControlInterface_forceModeSetDamping(swigCPtr, this, damping);
  }

  public boolean forceModeSetGainScaling(double scaling) {
    return RTDE_MODULEJNI.RTDEControlInterface_forceModeSetGainScaling(swigCPtr, this, scaling);
  }

  public int toolContact(VectorDouble direction) {
    return RTDE_MODULEJNI.RTDEControlInterface_toolContact(swigCPtr, this, VectorDouble.getCPtr(direction), direction);
  }

  public double getStepTime() {
    return RTDE_MODULEJNI.RTDEControlInterface_getStepTime(swigCPtr, this);
  }

  public VectorDouble getActualJointPositionsHistory(int steps) {
    return new VectorDouble(RTDE_MODULEJNI.RTDEControlInterface_getActualJointPositionsHistory__SWIG_0(swigCPtr, this, steps), true);
  }

  public VectorDouble getActualJointPositionsHistory() {
    return new VectorDouble(RTDE_MODULEJNI.RTDEControlInterface_getActualJointPositionsHistory__SWIG_1(swigCPtr, this), true);
  }

  public VectorDouble getTargetWaypoint() {
    return new VectorDouble(RTDE_MODULEJNI.RTDEControlInterface_getTargetWaypoint(swigCPtr, this), true);
  }

  public boolean setTcp(VectorDouble tcp_offset) {
    return RTDE_MODULEJNI.RTDEControlInterface_setTcp(swigCPtr, this, VectorDouble.getCPtr(tcp_offset), tcp_offset);
  }

  public VectorDouble getInverseKinematics(VectorDouble x, VectorDouble qnear, double max_position_error, double max_orientation_error) {
    return new VectorDouble(RTDE_MODULEJNI.RTDEControlInterface_getInverseKinematics__SWIG_0(swigCPtr, this, VectorDouble.getCPtr(x), x, VectorDouble.getCPtr(qnear), qnear, max_position_error, max_orientation_error), true);
  }

  public VectorDouble getInverseKinematics(VectorDouble x, VectorDouble qnear, double max_position_error) {
    return new VectorDouble(RTDE_MODULEJNI.RTDEControlInterface_getInverseKinematics__SWIG_1(swigCPtr, this, VectorDouble.getCPtr(x), x, VectorDouble.getCPtr(qnear), qnear, max_position_error), true);
  }

  public VectorDouble getInverseKinematics(VectorDouble x, VectorDouble qnear) {
    return new VectorDouble(RTDE_MODULEJNI.RTDEControlInterface_getInverseKinematics__SWIG_2(swigCPtr, this, VectorDouble.getCPtr(x), x, VectorDouble.getCPtr(qnear), qnear), true);
  }

  public VectorDouble poseTrans(VectorDouble p_from, VectorDouble p_from_to) {
    return new VectorDouble(RTDE_MODULEJNI.RTDEControlInterface_poseTrans(swigCPtr, this, VectorDouble.getCPtr(p_from), p_from, VectorDouble.getCPtr(p_from_to), p_from_to), true);
  }

  public boolean triggerProtectiveStop() {
    return RTDE_MODULEJNI.RTDEControlInterface_triggerProtectiveStop(swigCPtr, this);
  }

  public boolean isProgramRunning() {
    return RTDE_MODULEJNI.RTDEControlInterface_isProgramRunning(swigCPtr, this);
  }

  public boolean setWatchdog(double min_frequency) {
    return RTDE_MODULEJNI.RTDEControlInterface_setWatchdog__SWIG_0(swigCPtr, this, min_frequency);
  }

  public boolean setWatchdog() {
    return RTDE_MODULEJNI.RTDEControlInterface_setWatchdog__SWIG_1(swigCPtr, this);
  }

  public boolean kickWatchdog() {
    return RTDE_MODULEJNI.RTDEControlInterface_kickWatchdog(swigCPtr, this);
  }

  public boolean isPoseWithinSafetyLimits(VectorDouble pose) {
    return RTDE_MODULEJNI.RTDEControlInterface_isPoseWithinSafetyLimits(swigCPtr, this, VectorDouble.getCPtr(pose), pose);
  }

  public boolean isJointsWithinSafetyLimits(VectorDouble q) {
    return RTDE_MODULEJNI.RTDEControlInterface_isJointsWithinSafetyLimits(swigCPtr, this, VectorDouble.getCPtr(q), q);
  }

  public VectorDouble getJointTorques() {
    return new VectorDouble(RTDE_MODULEJNI.RTDEControlInterface_getJointTorques(swigCPtr, this), true);
  }

  public final static class RobotStatus {
    public final static RTDEControlInterface.RobotStatus ROBOT_STATUS_POWER_ON = new RTDEControlInterface.RobotStatus("ROBOT_STATUS_POWER_ON", RTDE_MODULEJNI.RTDEControlInterface_ROBOT_STATUS_POWER_ON_get());
    public final static RTDEControlInterface.RobotStatus ROBOT_STATUS_PROGRAM_RUNNING = new RTDEControlInterface.RobotStatus("ROBOT_STATUS_PROGRAM_RUNNING", RTDE_MODULEJNI.RTDEControlInterface_ROBOT_STATUS_PROGRAM_RUNNING_get());
    public final static RTDEControlInterface.RobotStatus ROBOT_STATUS_TEACH_BUTTON_PRESSED = new RTDEControlInterface.RobotStatus("ROBOT_STATUS_TEACH_BUTTON_PRESSED", RTDE_MODULEJNI.RTDEControlInterface_ROBOT_STATUS_TEACH_BUTTON_PRESSED_get());
    public final static RTDEControlInterface.RobotStatus ROBOT_STATUS_POWER_BUTTON_PRESSED = new RTDEControlInterface.RobotStatus("ROBOT_STATUS_POWER_BUTTON_PRESSED", RTDE_MODULEJNI.RTDEControlInterface_ROBOT_STATUS_POWER_BUTTON_PRESSED_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static RobotStatus swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + RobotStatus.class + " with value " + swigValue);
    }

    private RobotStatus(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private RobotStatus(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private RobotStatus(String swigName, RobotStatus swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static RobotStatus[] swigValues = { ROBOT_STATUS_POWER_ON, ROBOT_STATUS_PROGRAM_RUNNING, ROBOT_STATUS_TEACH_BUTTON_PRESSED, ROBOT_STATUS_POWER_BUTTON_PRESSED };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class SafetyStatus {
    public final static RTDEControlInterface.SafetyStatus IS_NORMAL_MODE = new RTDEControlInterface.SafetyStatus("IS_NORMAL_MODE", RTDE_MODULEJNI.RTDEControlInterface_IS_NORMAL_MODE_get());
    public final static RTDEControlInterface.SafetyStatus IS_REDUCED_MODE = new RTDEControlInterface.SafetyStatus("IS_REDUCED_MODE", RTDE_MODULEJNI.RTDEControlInterface_IS_REDUCED_MODE_get());
    public final static RTDEControlInterface.SafetyStatus IS_PROTECTIVE_STOPPED = new RTDEControlInterface.SafetyStatus("IS_PROTECTIVE_STOPPED", RTDE_MODULEJNI.RTDEControlInterface_IS_PROTECTIVE_STOPPED_get());
    public final static RTDEControlInterface.SafetyStatus IS_RECOVERY_MODE = new RTDEControlInterface.SafetyStatus("IS_RECOVERY_MODE", RTDE_MODULEJNI.RTDEControlInterface_IS_RECOVERY_MODE_get());
    public final static RTDEControlInterface.SafetyStatus IS_SAFEGUARD_STOPPED = new RTDEControlInterface.SafetyStatus("IS_SAFEGUARD_STOPPED", RTDE_MODULEJNI.RTDEControlInterface_IS_SAFEGUARD_STOPPED_get());
    public final static RTDEControlInterface.SafetyStatus IS_SYSTEM_EMERGENCY_STOPPED = new RTDEControlInterface.SafetyStatus("IS_SYSTEM_EMERGENCY_STOPPED", RTDE_MODULEJNI.RTDEControlInterface_IS_SYSTEM_EMERGENCY_STOPPED_get());
    public final static RTDEControlInterface.SafetyStatus IS_ROBOT_EMERGENCY_STOPPED = new RTDEControlInterface.SafetyStatus("IS_ROBOT_EMERGENCY_STOPPED", RTDE_MODULEJNI.RTDEControlInterface_IS_ROBOT_EMERGENCY_STOPPED_get());
    public final static RTDEControlInterface.SafetyStatus IS_EMERGENCY_STOPPED = new RTDEControlInterface.SafetyStatus("IS_EMERGENCY_STOPPED", RTDE_MODULEJNI.RTDEControlInterface_IS_EMERGENCY_STOPPED_get());
    public final static RTDEControlInterface.SafetyStatus IS_VIOLATION = new RTDEControlInterface.SafetyStatus("IS_VIOLATION", RTDE_MODULEJNI.RTDEControlInterface_IS_VIOLATION_get());
    public final static RTDEControlInterface.SafetyStatus IS_FAULT = new RTDEControlInterface.SafetyStatus("IS_FAULT", RTDE_MODULEJNI.RTDEControlInterface_IS_FAULT_get());
    public final static RTDEControlInterface.SafetyStatus IS_STOPPED_DUE_TO_SAFETY = new RTDEControlInterface.SafetyStatus("IS_STOPPED_DUE_TO_SAFETY", RTDE_MODULEJNI.RTDEControlInterface_IS_STOPPED_DUE_TO_SAFETY_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static SafetyStatus swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + SafetyStatus.class + " with value " + swigValue);
    }

    private SafetyStatus(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private SafetyStatus(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private SafetyStatus(String swigName, SafetyStatus swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static SafetyStatus[] swigValues = { IS_NORMAL_MODE, IS_REDUCED_MODE, IS_PROTECTIVE_STOPPED, IS_RECOVERY_MODE, IS_SAFEGUARD_STOPPED, IS_SYSTEM_EMERGENCY_STOPPED, IS_ROBOT_EMERGENCY_STOPPED, IS_EMERGENCY_STOPPED, IS_VIOLATION, IS_FAULT, IS_STOPPED_DUE_TO_SAFETY };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
